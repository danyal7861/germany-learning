<%- include('./partials/header', { title: 'Register' }) %> <!-- Include the common header with the title "Register" -->

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <div class="card-body p-4">
                    <h2 class="text-center mb-4">
                        <i class="fas fa-user-plus me-2"></i>Create Account
                    </h2>

                    <!-- Display error messages based on query params -->
                    <% if (query.error === 'passwordmismatch') { %>
                        <div class="alert alert-danger">
                            Passwords do not match. Please try again.
                        </div>
                    <% } else if (query.error === 'invalidPassword') { %>
                        <div class="alert alert-danger">
                            Password must be 8-128 characters with at least one special character (!@#$%^&*).
                        </div>
                    <% } else if (query.error === 'invalidName') { %>
                        <div class="alert alert-danger">
                            Name should only contain letters and spaces. No numbers or symbols allowed.
                        </div>
                    <% } else if (query.error === 'emailExists') { %>
                        <div class="alert alert-danger">
                            Email already in use. Please use another email or <a href="/login">login</a>.
                        </div>
                    <% } else if (query.error === 'serverError') { %>
                        <div class="alert alert-danger">
                            An error occurred. Please try again later.
                        </div>
                    <% } else if (query.error === 'termsNotAccepted') { %>
                        <div class="alert alert-danger">
                            You must accept the Terms and Conditions to register.
                        </div>
                    <% } %>

                    <!-- Registration form -->
                    <form action="/register" method="POST" id="registrationForm">
                        <!-- Full Name Input -->
                        <div class="mb-3">
                            <label for="name" class="form-label">Full Name</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                <input type="text" class="form-control" id="name" name="name" 
                                    placeholder="Letters only" 
                                    pattern="^[A-Za-z\s]+$"
                                    title="Only letters and spaces allowed"
                                    required>
                            </div>
                            <small id="name-feedback" class="form-text text-muted">Only letters and spaces allowed</small>
                        </div>

                        <!-- Email Input -->
                        <div class="mb-3">
                            <label for="email" class="form-label">Email address</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                <input type="email" class="form-control" id="email" name="email" 
                                    placeholder="example@domain.com"
                                    title="Please include an @ symbol in the email address"
                                    pattern="[^@\s]+@[^@\s]+"
                                    required>
                            </div>
                            <small class="form-text text-muted">Must include an @ symbol</small>
                        </div>

                        <!-- Password Input -->
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input type="password" class="form-control" id="password" name="password" 
                                    minlength="8"
                                    maxlength="128"
                                    required>
                            </div>
                            <div class="d-flex justify-content-between">
                                <small class="form-text text-muted">
                                    Must be 8-128 characters with at least one special character (!@#$%^&*)
                                </small>
                                <small id="char-count" class="form-text text-muted">0/128</small>
                            </div>
                            <div class="password-strength mt-1">
                                <div class="progress" style="height: 5px;">
                                    <div id="password-strength-meter" class="progress-bar bg-danger" role="progressbar" style="width: 0%"></div>
                                </div>
                                <small id="password-feedback" class="form-text">Requires special character (!@#$%^&*)</small>
                            </div>
                        </div>

                        <!-- Confirm Password Input -->
                        <div class="mb-4">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                            </div>
                            <small id="confirm-feedback" class="form-text"></small>
                        </div>

                        <!-- Terms and Conditions Checkbox -->
                        <div class="mb-4">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="acceptTerms" name="acceptTerms" required>
                                <label class="form-check-label" for="acceptTerms">
                                    I agree to the <a href="/terms" target="_blank">Terms and Conditions</a>
                                </label>
                            </div>
                            <small id="terms-feedback" class="form-text"></small>
                        </div>

                        <!-- Submit Button -->
                        <div class="d-grid">
                            <button type="submit" class="btn btn-success btn-lg" id="submitBtn">Create Account</button>
                        </div>
                    </form>

                    <!-- Link to Login Page -->
                    <div class="text-center mt-4">
                        <p>Already have an account? <a href="/login" class="text-success">Sign in</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for form validation and password strength -->
<script>
(function() {
    document.addEventListener('DOMContentLoaded', function() {
        // Form elements
        const form = document.getElementById('registrationForm');
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const strengthMeter = document.getElementById('password-strength-meter');
        const feedback = document.getElementById('password-feedback');
        const confirmFeedback = document.getElementById('confirm-feedback');
        const nameInput = document.getElementById('name');
        const nameFeedback = document.getElementById('name-feedback');
        const charCount = document.getElementById('char-count');
        const termsCheckbox = document.getElementById('acceptTerms');
        const termsFeedback = document.getElementById('terms-feedback');

        // Password validation function
        function validatePassword() {
            const password = passwordInput.value;
            const hasSpecialChar = /[!@#$%^&*]/g.test(password);
            const isValidLength = password.length >= 8 && password.length <= 128;
            let isValid = hasSpecialChar && isValidLength;
            
            // Update character count
            charCount.textContent = password.length + '/128';
            
            // Show limit message when max length is reached
            if (password.length === 128) {
                charCount.textContent = '128/128 - Character limit reached';
                charCount.className = 'form-text text-danger';
            } else {
                charCount.className = 'form-text text-muted';
            }
            
            // Strength calculation
            let strength = 0;
            if (password.length >= 4) strength += 25;
            if (password.length >= 8) strength += 25;
            if (hasSpecialChar) strength += 25;
            if (/[A-Z]/.test(password)) strength += 25;
            
            // Update UI
            strengthMeter.style.width = strength + '%';
            
            // Set validation state
            passwordInput.setCustomValidity(isValid ? '' : 'Password requirements not met');
            
            // Update feedback
            if (!hasSpecialChar) {
                feedback.textContent = 'Missing special character (!@#$%^&*)';
                feedback.className = 'form-text text-danger';
            } else if (!isValidLength) {
                feedback.textContent = 'Password must be 8-128 characters';
                feedback.className = 'form-text text-danger';
            } else if (strength < 75) {
                feedback.textContent = 'Password acceptable (add uppercase for stronger)';
                feedback.className = 'form-text text-warning';
            } else {
                feedback.textContent = 'Strong password';
                feedback.className = 'form-text text-success';
            }
            
            // Update strength meter color
            if (strength < 50) {
                strengthMeter.className = 'progress-bar bg-danger';
            } else if (strength < 75) {
                strengthMeter.className = 'progress-bar bg-warning';
            } else {
                strengthMeter.className = 'progress-bar bg-success';
            }
            
            return isValid;
        }
        
        // Confirm password validation
        function validateConfirmPassword() {
            const isMatch = passwordInput.value === confirmPasswordInput.value;
            
            if (confirmPasswordInput.value.length > 0) {
                confirmPasswordInput.setCustomValidity(isMatch ? '' : 'Passwords do not match');
                confirmFeedback.textContent = isMatch ? 'Passwords match' : 'Passwords do not match';
                confirmFeedback.className = isMatch ? 'form-text text-success' : 'form-text text-danger';
            } else {
                confirmPasswordInput.setCustomValidity('');
                confirmFeedback.textContent = '';
            }
            
            return isMatch || confirmPasswordInput.value.length === 0;
        }
        
        // Name validation function
        function validateName() {
            const name = nameInput.value;
            const isValid = /^[A-Za-z\s]*$/.test(name);
            
            nameInput.setCustomValidity(!isValid && name.length > 0 ? 'Name should only contain letters and spaces' : '');
            
            if (!isValid && name.length > 0) {
                nameFeedback.textContent = 'Only letters and spaces allowed';
                nameFeedback.className = 'form-text text-danger';
                return false;
            } else {
                nameFeedback.textContent = 'Only letters and spaces allowed';
                nameFeedback.className = 'form-text text-muted';
                return true;
            }
        }
        
        // Terms validation function
        function validateTerms() {
            const isChecked = termsCheckbox.checked;
            
            termsCheckbox.setCustomValidity(isChecked ? '' : 'You must accept the Terms and Conditions');
            
            if (isChecked) {
                termsFeedback.textContent = 'Terms accepted';
                termsFeedback.className = 'form-text text-success';
            } else {
                termsFeedback.textContent = '';
            }
            
            return isChecked;
        }

        // Set up event listeners
        if (passwordInput && strengthMeter) {
            passwordInput.addEventListener('input', validatePassword);
            passwordInput.addEventListener('blur', validatePassword);
        }
        
        if (confirmPasswordInput) {
            confirmPasswordInput.addEventListener('input', validateConfirmPassword);
            confirmPasswordInput.addEventListener('blur', validateConfirmPassword);
        }
        
        if (nameInput) {
            nameInput.addEventListener('input', validateName);
            nameInput.addEventListener('blur', validateName);
        }
        
        if (termsCheckbox) {
            termsCheckbox.addEventListener('change', validateTerms);
            termsCheckbox.addEventListener('blur', validateTerms);
        }
        
        // Form submission handler
        form.addEventListener('submit', function(event) {
            // Run all validations
            const validations = [
                passwordInput && validatePassword(),
                confirmPasswordInput && validateConfirmPassword(),
                nameInput && validateName(),
                termsCheckbox && validateTerms()
            ];
            
            // If any validation fails, prevent form submission
            if (validations.includes(false)) {
                event.preventDefault();
            }
        });
        
        // Initial validation
        if (passwordInput) validatePassword();
    });
})();
</script>

<%- include('./partials/footer') %> <!-- Include the common footer -->